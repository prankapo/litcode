{
    "basic_indent.txt": {
        "srcfname": "tests/basic_indentation_test.tex",
        "dstfname": "basic_indent.txt",
        "startlno": 4,
        "lines": [
            "# \"tests/basic_indentation_test.tex\" line 4\n",
            "# ['basic_indent.txt']\n",
            "The code written at level zero is not indented at all.\n",
            "if x happens:\n",
            "    @<\\coderef{algorithm1}@>\n",
            "# \"tests/basic_indentation_test.tex\" line 8\n",
            "# ['basic_indent.txt']\n",
            "else:\n",
            "    @<\\coderef{algorithm2}@>\n",
            "# \"tests/basic_indentation_test.tex\" line 10\n",
            "# ['basic_indent.txt']\n",
            "End of code block.\n"
        ]
    },
    "algorithm1": {
        "srcfname": "tests/basic_indentation_test.tex",
        "dstfname": "algorithm1",
        "startlno": 15,
        "lines": [
            "# \"tests/basic_indentation_test.tex\" line 15\n",
            "# ['algorithm1']\n",
            "Algo1: Instruction 1\n",
            "Algo1: Instruction 2\n",
            "if z1 happens:\n",
            "    @<\\coderef{algorithm1a}@>\n",
            "    # \"tests/basic_indentation_test.tex\" line 20\n",
            "    # ['algorithm1']\n",
            "    if flag is True:\n",
            "        @<\\coderef{algorithm1b}@>\n",
            "# \"tests/basic_indentation_test.tex\" line 22\n",
            "# ['algorithm1']\n",
            "Stop.\n"
        ]
    },
    "algorithm2": {
        "srcfname": "tests/basic_indentation_test.tex",
        "dstfname": "algorithm2",
        "startlno": 25,
        "lines": [
            "# \"tests/basic_indentation_test.tex\" line 25\n",
            "# ['algorithm2']\n",
            "Algo2: Instruction 1\n",
            "Algo2: Instruction 2\n",
            "Algo2: Instruction 3\n",
            "Algo2: for _ in range(100):\n",
            "      @<\\coderef{print curses}@>\n",
            "# \"tests/basic_indentation_test.tex\" line 31\n",
            "# ['algorithm2']\n",
            "Stop.\n"
        ]
    },
    "print curses": {
        "srcfname": "tests/basic_indentation_test.tex",
        "dstfname": "print curses",
        "startlno": 36,
        "lines": [
            "# \"tests/basic_indentation_test.tex\" line 36\n",
            "# ['print curses']\n",
            "for curse in curses:\n",
            "    print(curse)\n",
            "    exit(0)\n"
        ]
    },
    "algorithm1a": {
        "srcfname": "tests/basic_indentation_test.tex",
        "dstfname": "algorithm1a",
        "startlno": 44,
        "lines": [
            "# \"tests/basic_indentation_test.tex\" line 44\n",
            "# ['algorithm1a']\n",
            "1a: Do inst1\n",
            "1a: Do inst2\n",
            "while True:\n",
            "    do inst2 + inst5 \n",
            "    random stuff\n"
        ]
    },
    "algorithm1b": {
        "srcfname": "tests/basic_indentation_test.tex",
        "dstfname": "algorithm1b",
        "startlno": 52,
        "lines": [
            "# \"tests/basic_indentation_test.tex\" line 52\n",
            "# ['algorithm1b']\n",
            "1b: 1b = 1c\n",
            "1b: 1c = 1a\n",
            "1b: 1a = 1b\n",
            "if x:\n",
            "    if y:\n",
            "        if z:\n",
            "            enjoy\n",
            "            if z+:\n",
            "                print('Extreme Indentation')\n",
            "        else:\n",
            "            don't enjoy\n",
            "    else:\n",
            "        don't cry\n",
            "else:\n",
            "    don't laugh\n"
        ]
    },
    "src/thousand_primes.py": {
        "srcfname": "tests/print_primes/main.tex",
        "dstfname": "src/thousand_primes.py",
        "startlno": 5,
        "lines": [
            "# \"tests/print_primes/main.tex\" line 5\n",
            "# ['src/thousand_primes.py']\n",
            "@<\\coderef{Basic Imports}@>\n",
            "\n",
            "# \"tests/print_primes/main.tex\" line 8\n",
            "# ['src/thousand_primes.py']\n",
            "def is_prime(n):\n",
            "    @<\\coderef{Check whether a number is prime or not}@>\n",
            "\n",
            "# \"tests/print_primes/main.tex\" line 11\n",
            "# ['src/thousand_primes.py']\n",
            "pcount = 0\n",
            "n = 2\n",
            "while pcount != 1000:\n",
            "    if is_prime(n):\n",
            "        print(n, end = ' ')\n",
            "        pcount += 1\n",
            "    n += 1\n",
            "\n",
            "print('End.')\n",
            "\n"
        ]
    },
    "Basic Imports": {
        "srcfname": "tests/print_primes/main.tex",
        "dstfname": "Basic Imports",
        "startlno": 27,
        "lines": [
            "# \"tests/print_primes/main.tex\" line 27\n",
            "# ['Basic Imports']\n",
            "import os\n",
            "import sys\n",
            "import time\n",
            "\n"
        ]
    },
    "Check whether a number is prime or not": {
        "srcfname": "tests/print_primes/main.tex",
        "dstfname": "Check whether a number is prime or not",
        "startlno": 37,
        "lines": [
            "# \"tests/print_primes/main.tex\" line 37\n",
            "# ['Check whether a number is prime or not']\n",
            "ndivisors = 0\n",
            "for d in range(1, n // 2 + 1):\n",
            "    if n % d  == 0: ndivisors += 1\n",
            "    if ndivisors > 1: return False\n",
            "return True\n",
            "\n"
        ]
    }
}