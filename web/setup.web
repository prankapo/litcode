\subsection{setup.py}
In the original version of \litcode{} that I have pushed to my GitHub repository, the scripts were being
\textit{installed} by moving them to \texttt{~/local/bin/} which was a part of PATH environment variable in my
local machine. Say that the user of this software has not setup such a directory. In that case the recipe for
\texttt{install} won't work! A better way to run these scripts from anywhere would be to publish them as a
package and let \texttt{setuptools} and \texttt{pip} deal with the headache of installing these scripts
properly.  \\

To make \litcode{} \it installable \rm, I need to change the directory structure a bit. The directory
structure would be as follows: 
<<>>=
litcode/
   |__ litcode/
       |__ linit.py
       |__ ldump.py
       |__ ltangle.py
       |__ lweave.py
       |__ setup.py
   .
   .
@

As you can see, the scripts are now placed another folder named \tt litcode \rm and inside this folder is
another file named \tt setup.py \rm. This Python script would be responsible for installing the package in
such a way that it is accessible from anywhere in the system. \\

We begin by importing \tt setup \rm and \verb|find_packages| from \tt setuptools \rm: 
<<setup.py>>=
from setuptools import setup, find_packages

@

Now we define the global setup function, arguments to which will define how are program is defined and should
be installed. Let me define the name of the package and version number:
<<setup.py>>=

setup(
	name = 'litcode',
@

For the version number, I can read \texttt{version.txt} and get the version number from there. This would make
\texttt{version.txt} a \texttt{package data} file.

<<setup.py>>=
	package_data = {
		'version': ['version.txt']
	},
	version = '''
	<<version>>
	''',
@

Using \verb|find_packages()|, we pass a list of packages used in this project:
<<setup.py>>=
	packages = find_packages(),

@

Now, I will define the entry points for various command line invocations of the scripts:
<<setup.py>>=
	entry_points = {
		'console_scripts' : [
			'plsty=litcode.plsty:main',
			'ldump=litcode.ldump:main',
			'ltangle=litcode.ltangle:main',
			'lweave=litcode.lweave:main'
		]
	}
)

@

Also let us have the customary \verb|__init__.py| which will make sure that the folder is getting recognized
as a package.
<<__init__.py>>=
@
